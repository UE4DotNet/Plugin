// Copyright 2018 by JCoder58.  See License.txt for license
// Auto-generated --- Do not modify.
using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using UE4.Core;
using UE4.CoreUObject;
using UE4.CoreUObject.Native;
using UE4.InputCore;
using UE4.Native;

namespace UE4.VectorVM {
    ///<summary>EVector VMOp</summary>
    public enum EVectorVMOp {
        done = 0x00000000, 
        add = 0x00000001, 
        sub = 0x00000002, 
        mul = 0x00000003, 
        div = 0x00000004, 
        mad = 0x00000005, 
        lerp = 0x00000006, 
        rcp = 0x00000007, 
        rsq = 0x00000008, 
        sqrt = 0x00000009, 
        neg = 0x0000000a, 
        abs = 0x0000000b, 
        exp = 0x0000000c, 
        exp2 = 0x0000000d, 
        log = 0x0000000e, 
        log2 = 0x0000000f, 
        sin = 0x00000010, 
        cos = 0x00000011, 
        tan = 0x00000012, 
        asin = 0x00000013, 
        acos = 0x00000014, 
        atan = 0x00000015, 
        atan2 = 0x00000016, 
        ceil = 0x00000017, 
        floor = 0x00000018, 
        fmod = 0x00000019, 
        frac = 0x0000001a, 
        trunc = 0x0000001b, 
        clamp = 0x0000001c, 
        min = 0x0000001d, 
        max = 0x0000001e, 
        pow = 0x0000001f, 
        round = 0x00000020, 
        sign = 0x00000021, 
        step = 0x00000022, 
        random = 0x00000023, 
        noise = 0x00000024, 
        cmplt = 0x00000025, 
        cmple = 0x00000026, 
        cmpgt = 0x00000027, 
        cmpge = 0x00000028, 
        cmpeq = 0x00000029, 
        cmpneq = 0x0000002a, 
        select = 0x0000002b, 
        addi = 0x0000002c, 
        subi = 0x0000002d, 
        muli = 0x0000002e, 
        clampi = 0x0000002f, 
        mini = 0x00000030, 
        maxi = 0x00000031, 
        absi = 0x00000032, 
        negi = 0x00000033, 
        signi = 0x00000034, 
        randomi = 0x00000035, 
        cmplti = 0x00000036, 
        cmplei = 0x00000037, 
        cmpgti = 0x00000038, 
        cmpgei = 0x00000039, 
        cmpeqi = 0x0000003a, 
        cmpneqi = 0x0000003b, 
        bit_and = 0x0000003c, 
        bit_or = 0x0000003d, 
        bit_xor = 0x0000003e, 
        bit_not = 0x0000003f, 
        logic_and = 0x00000040, 
        logic_or = 0x00000041, 
        logic_xor = 0x00000042, 
        logic_not = 0x00000043, 
        f2i = 0x00000044, 
        i2f = 0x00000045, 
        f2b = 0x00000046, 
        b2f = 0x00000047, 
        i2b = 0x00000048, 
        b2i = 0x00000049, 
        inputdata_32bit = 0x0000004a, 
        inputdata_noadvance_32bit = 0x0000004b, 
        outputdata_32bit = 0x0000004c, 
        acquireindex = 0x0000004d, 
        external_func_call = 0x0000004e, 
        exec_index = 0x0000004f, 
        noise2D = 0x00000050, 
        noise3D = 0x00000051, 
        enter_stat_scope = 0x00000052, 
        exit_stat_scope = 0x00000053, 
        update_id = 0x00000054, 
        acquire_id = 0x00000055, 
        NumOpcodes = 0x00000056, 
        EVectorVMOp_MAX = 0x00000057
    }
}
