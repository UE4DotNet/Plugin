// Copyright 2018 by JCoder58.  See License.txt for license
// Auto-generated --- Do not modify.
using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using UE4.Core;
using UE4.CoreUObject;
using UE4.CoreUObject.Native;
using UE4.InputCore;
using UE4.Native;

#pragma warning disable CS0108
using UE4.AIModule.Native;
using UE4.Engine;

namespace UE4.AIModule {
    ///<summary>Env Query Instance Blueprint Wrapper</summary>
    public unsafe partial class EnvQueryInstanceBlueprintWrapper : UObject  {

        ///<summary>Get Item Score</summary>
        public float GetItemScore(int ItemIndex)  => 
            EnvQueryInstanceBlueprintWrapper_methods.GetItemScore_method.Invoke(ObjPointer, ItemIndex);

        ///<summary>return an array filled with resulting actors. Note that it makes sense only if ItemType is a EnvQueryItemType_ActorBase-derived type</summary>
        public IReadOnlyCollection<Actor> GetResultsAsActors()  => 
            EnvQueryInstanceBlueprintWrapper_methods.GetResultsAsActors_method.Invoke(ObjPointer);

        ///<summary>returns an array of locations generated by the query. If the query generated Actors the the array is filled with their locations</summary>
        public IReadOnlyCollection<Vector> GetResultsAsLocations()  => 
            EnvQueryInstanceBlueprintWrapper_methods.GetResultsAsLocations_method.Invoke(ObjPointer);

        ///<summary>Set Named Param</summary>
        public void SetNamedParam(Name ParamName, float Value)  => 
            EnvQueryInstanceBlueprintWrapper_methods.SetNamedParam_method.Invoke(ObjPointer, ParamName, Value);
        ///<summary>Query ID</summary>
        public unsafe int QueryID {
            get {return EnvQueryInstanceBlueprintWrapper_ptr->QueryID;}
        }
        ///<summary>Item Type</summary>
        public unsafe SubclassOf<EnvQueryItemType> ItemType {
            get {return EnvQueryInstanceBlueprintWrapper_ptr->ItemType;}
        }
        ///<summary>index of query option, that generated items</summary>
        public unsafe int OptionIndex {
            get {return EnvQueryInstanceBlueprintWrapper_ptr->OptionIndex;}
        }
         //TODO: multicast delegate FEQSQueryDoneSignature OnQueryFinishedEvent
        static EnvQueryInstanceBlueprintWrapper() {
            StaticClass = Main.GetClass("EnvQueryInstanceBlueprintWrapper");
        }
        internal unsafe EnvQueryInstanceBlueprintWrapper_fields* EnvQueryInstanceBlueprintWrapper_ptr => (EnvQueryInstanceBlueprintWrapper_fields*) ObjPointer.ToPointer();

        ///<summary>Convert from IntPtr to UObject</summary>
        public static implicit operator EnvQueryInstanceBlueprintWrapper(IntPtr p) => UObject.Make<EnvQueryInstanceBlueprintWrapper>(p);
        ///<summary>Get UE4 Class</summary>
        public static Class StaticClass {get; private set;}
        ///<summary>Get UE4 Default Object for this Class</summary>
        public static EnvQueryInstanceBlueprintWrapper DefaultObject => Main.GetDefaultObject(StaticClass);
        ///<summary>Spawn an object of this class</summary>
        public static EnvQueryInstanceBlueprintWrapper New(UObject obj = null, Name name = new Name()) => Main.NewObject(StaticClass, obj, name);
    }
}
