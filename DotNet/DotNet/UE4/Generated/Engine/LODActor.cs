// Copyright 2018 by JCoder58.  See License.txt for license
// Auto-generated --- Do not modify.
using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using UE4.Core;
using UE4.CoreUObject;
using UE4.CoreUObject.Native;
using UE4.InputCore;
using UE4.Native;

#pragma warning disable CS0108
using UE4.Engine.Native;

namespace UE4.Engine {
    ///<summary>
    ///LODActor is an instance of an autogenerated StaticMesh Actors by Hierarchical LOD System
    ///This is essentially just StaticMeshActor that you can't move or edit, but it contains multiple actors reference
    ///@
    ///</summary>
    ///<remarks>
    ///see https://docs.unrealengine.com/latest/INT/Engine/Actors/LODActor/
    ///@see UStaticMesh
    ///</remarks>
    public unsafe partial class LODActor : Actor  {
        ///<summary>disable display of this component</summary>
        public unsafe StaticMeshComponent StaticMeshComponent {
            get {return LODActor_ptr->StaticMeshComponent;}
            set {LODActor_ptr->StaticMeshComponent = value;}
        }
        ///<summary>The mesh proxy used to display this LOD</summary>
        public unsafe HLODProxy Proxy {
            get {return LODActor_ptr->Proxy;}
            set {LODActor_ptr->Proxy = value;}
        }
        ///<summary>The key used to validate this actor against the proxy</summary>
        public unsafe Name Key {
            get {return LODActor_ptr->Key;}
            set {LODActor_ptr->Key = value;}
        }
        ///<summary>what distance do you want this to show up instead of SubActors</summary>
        public unsafe float LODDrawDistance {
            get {return LODActor_ptr->LODDrawDistance;}
            set {LODActor_ptr->LODDrawDistance = value;}
        }
        ///<summary>Sub Actors</summary>
        public ObjectArrayField<Actor> SubActors{ get {
            if(SubActors_store == null) SubActors_store = new ObjectArrayField<Actor> (&LODActor_ptr->SubActors);
            return SubActors_store;
        } }
        private ObjectArrayField<Actor> SubActors_store;

        ///<summary>The hierarchy level of this actor; the first tier of HLOD is level 1, the second tier is level 2 and so on.</summary>
        public unsafe int LODLevel {
            get {return LODActor_ptr->LODLevel;}
            set {LODActor_ptr->LODLevel = value;}
        }
        ///<summary>Cached Num HLODLevels</summary>
        public unsafe byte CachedNumHLODLevels {
            get {return LODActor_ptr->CachedNumHLODLevels;}
            set {LODActor_ptr->CachedNumHLODLevels = value;}
        }
         //TODO: numeric uint32 NumTrianglesInSubActors
         //TODO: numeric uint32 NumTrianglesInMergedMesh
        public bool bOverrideMaterialMergeSettings {
            get {return Main.GetGetBoolPropertyByName(this, "bOverrideMaterialMergeSettings"); }
            set {Main.SetGetBoolPropertyByName(this, "bOverrideMaterialMergeSettings", value); }
        }
        ///<summary>Override Material Settings, used when creating the proxy mesh</summary>
        public unsafe MaterialProxySettings MaterialSettings {
            get {return LODActor_ptr->MaterialSettings;}
            set {LODActor_ptr->MaterialSettings = value;}
        }
        public bool bOverrideTransitionScreenSize {
            get {return Main.GetGetBoolPropertyByName(this, "bOverrideTransitionScreenSize"); }
            set {Main.SetGetBoolPropertyByName(this, "bOverrideTransitionScreenSize", value); }
        }
        ///<summary>
        ///Override transition screen size value, determines the screen size at which the proxy is visible
        ///The screen size is based around the projected diameter of the bounding
        ///sphere of the model.
        ///</summary>
        ///<remarks>i.e. 0.5 means half the screen's maximum dimension.</remarks>
        public unsafe float TransitionScreenSize {
            get {return LODActor_ptr->TransitionScreenSize;}
            set {LODActor_ptr->TransitionScreenSize = value;}
        }
        public bool bOverrideScreenSize {
            get {return Main.GetGetBoolPropertyByName(this, "bOverrideScreenSize"); }
            set {Main.SetGetBoolPropertyByName(this, "bOverrideScreenSize", value); }
        }
        ///<summary>Override screen size value used in mesh reduction, when creating the proxy mesh</summary>
        public unsafe int ScreenSize {
            get {return LODActor_ptr->ScreenSize;}
            set {LODActor_ptr->ScreenSize = value;}
        }
        static LODActor() {
            StaticClass = Main.GetClass("LODActor");
        }
        internal unsafe LODActor_fields* LODActor_ptr => (LODActor_fields*) ObjPointer.ToPointer();

        ///<summary>Convert from IntPtr to UObject</summary>
        public static implicit operator LODActor(IntPtr p) => UObject.Make<LODActor>(p);
        ///<summary>Get UE4 Class</summary>
        public static Class StaticClass {get; private set;}
        ///<summary>Get UE4 Default Object for this Class</summary>
        public static LODActor DefaultObject => Main.GetDefaultObject(StaticClass);
        ///<summary>Spawn an object of this class</summary>
        public static LODActor New(UObject obj = null, Name name = new Name()) => Main.NewObject(StaticClass, obj, name);
    }
}
